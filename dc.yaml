apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: null
  generation: 1
  labels:
    app: dockerminecraft
  name: dockerminecraft
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    app: dockerminecraft
    deploymentconfig: dockerminecraft
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: dockerminecraft
        deploymentconfig: dockerminecraft
    spec:
      containers:
      - image: docker-registry.default.svc:5000/minecraft/dockerminecraft
        imagePullPolicy: Always
        name: dockerminecraft
        ports:
        - containerPort: 25565
          protocol: TCP
        resources:
            limits:
                cpu: "4"
                memory: "4Gi"
            requests:
                cpu: "2"
                memory: "2Gi"

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/minecraft/world
          name: volume-minecraft
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: volume-minecraft
        persistentVolumeClaim:
          claimName: minecraft
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - dockerminecraft
      from:
        kind: ImageStreamTag
        name: dockerminecraft:latest
        namespace: minecraft
    type: ImageChange
